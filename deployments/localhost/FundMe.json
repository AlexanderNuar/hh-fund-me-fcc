{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1526abbd57f683be7cfce8cc90b31ef0812d0141cdb2727c1ef36ab72b7c4f08",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "851499",
    "logsBloom": "0x
    "blockHash": "0xe07e7d9b43ec36b83c5a17fa00de1f2b6ae96a70b1568d77e17a52807beee4d2",
    "transactionHash": "0x1526abbd57f683be7cfce8cc90b31ef0812d0141cdb2727c1ef36ab72b7c4f08",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "851499",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "a9dd6b779c2b1bd08f86e89974162638",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get Funds From Users\\n// Withdraw funds\\n// Set minimum funding value in USD\\n\\n//SPDX-License-Identifier: MIT\\n//Pragma\\npragma solidity ^0.8.7;\\n// imports\\nimport \\\"./PriceConverter.sol\\\";\\n// error codes\\nerror FundMe__NotOwner();\\n\\n// interfaces, librarys, contracts\\n\\ncontract FundMe {\\n    // type declarations\\n\\n    using PriceConverter for uint256;\\n\\n    // state variables\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18; // 1 * 10 **18\\n    // 307 - constant\\n    // 2451 - without constant\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    //modifiers\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough\\\"\\n        ); // 1e18 == 1 * 10 ** 18 == 1000000000000000000\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex = funderIndex + 1\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n\\n        // call (forward all gas or set gas, returns bool)\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    // What happens if someone sends this contract ETH without calling the fund function?\\n}\\n\",\"keccak256\":\"0x7a8b8ad79a1cb5e5af97f2ad5ec14927e122b6198b53d86c0d24e3fa164ecab9\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    // function getVersion() internal view returns (uint256) {\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //         0x694AA1769357215DE4FAC081bf1f309aDC325306\\n    //     );\\n    //     return priceFeed.version();\\n    // }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethAmount * ethPrice) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xeed34591a8b40006a913062d1466f986e46cec003eebb36aed161dc1515c2da7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f6b380380610f6b833981810160405281019061003291906100c5565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b6000815190506100bf81610129565b92915050565b6000602082840312156100db576100da610124565b5b60006100e9848285016100b0565b91505092915050565b60006100fd82610104565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610132816100f2565b811461013d57600080fd5b50565b60805160601c610e0661016560003960008181610193015261055a0152610e066000f3fe6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f4578063b60d42881461011f578063dba6335f14610129578063dc0d3dff1461015457610070565b80633ccfd60b146100755780633e47d6f31461008c5780636b69a592146100c9575b600080fd5b34801561008157600080fd5b5061008a610191565b005b34801561009857600080fd5b506100b360048036038101906100ae91906107a7565b6103d2565b6040516100c0919061099d565b60405180910390f35b3480156100d557600080fd5b506100de6103ea565b6040516100eb919061099d565b60405180910390f35b34801561010057600080fd5b506101096103f7565b6040516101169190610942565b60405180910390f35b61012761041d565b005b34801561013557600080fd5b5061013e610558565b60405161014b9190610927565b60405180910390f35b34801561016057600080fd5b5061017b600480360381019061017691906107d4565b61057c565b6040516101889190610927565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610216576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156102c257600080828154811061023b5761023a610cbc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506001816102bb91906109d4565b9050610219565b50600067ffffffffffffffff8111156102de576102dd610ceb565b5b60405190808252806020026020018201604052801561030c5781602001602082028036833780820191505090505b5060009080519060200190610322929190610697565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161034990610912565b60006040518083038185875af1925050503d8060008114610386576040519150601f19603f3d011682016040523d82523d6000602084013e61038b565b606091505b50509050806103cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c69061097d565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000061045c600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105bb90919063ffffffff16565b101561049d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104949061095d565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461054f91906109d4565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c7836105f7565b90506000670de0b6b3a764000082866105e09190610b72565b6105ea9190610a2a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064057600080fd5b505afa158015610654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106789190610801565b5050509150506402540be4008161068f9190610a5b565b915050919050565b828054828255906000526020600020908101928215610710579160200282015b8281111561070f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b7565b5b50905061071d9190610721565b5090565b5b8082111561073a576000816000905550600101610722565b5090565b60008135905061074d81610d74565b92915050565b60008151905061076281610d8b565b92915050565b60008135905061077781610da2565b92915050565b60008151905061078c81610da2565b92915050565b6000815190506107a181610db9565b92915050565b6000602082840312156107bd576107bc610d1a565b5b60006107cb8482850161073e565b91505092915050565b6000602082840312156107ea576107e9610d1a565b5b60006107f884828501610768565b91505092915050565b600080600080600060a0868803121561081d5761081c610d1a565b5b600061082b88828901610792565b955050602061083c88828901610753565b945050604061084d8882890161077d565b935050606061085e8882890161077d565b925050608061086f88828901610792565b9150509295509295909350565b61088581610bcc565b82525050565b61089481610c28565b82525050565b60006108a76012836109c3565b91506108b282610d1f565b602082019050919050565b60006108ca6000836109b8565b91506108d582610d48565b600082019050919050565b60006108ed600b836109c3565b91506108f882610d4b565b602082019050919050565b61090c81610c08565b82525050565b600061091d826108bd565b9150819050919050565b600060208201905061093c600083018461087c565b92915050565b6000602082019050610957600083018461088b565b92915050565b600060208201905081810360008301526109768161089a565b9050919050565b60006020820190508181036000830152610996816108e0565b9050919050565b60006020820190506109b26000830184610903565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109df82610c08565b91506109ea83610c08565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a1f57610a1e610c5e565b5b828201905092915050565b6000610a3582610c08565b9150610a4083610c08565b925082610a5057610a4f610c8d565b5b828204905092915050565b6000610a6682610bde565b9150610a7183610bde565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ab057610aaf610c5e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610aed57610aec610c5e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b2a57610b29610c5e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b6757610b66610c5e565b5b828202905092915050565b6000610b7d82610c08565b9150610b8883610c08565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bc157610bc0610c5e565b5b828202905092915050565b6000610bd782610be8565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c3382610c3a565b9050919050565b6000610c4582610c4c565b9050919050565b6000610c5782610be8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b50565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b610d7d81610bcc565b8114610d8857600080fd5b50565b610d9481610bde565b8114610d9f57600080fd5b50565b610dab81610c08565b8114610db657600080fd5b50565b610dc281610c12565b8114610dcd57600080fd5b5056fea264697066735822122044ab2f08a20c137accc01d719f054d662c61c6dc38b8ab9dcf524b366c9522e264736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f4578063b60d42881461011f578063dba6335f14610129578063dc0d3dff1461015457610070565b80633ccfd60b146100755780633e47d6f31461008c5780636b69a592146100c9575b600080fd5b34801561008157600080fd5b5061008a610191565b005b34801561009857600080fd5b506100b360048036038101906100ae91906107a7565b6103d2565b6040516100c0919061099d565b60405180910390f35b3480156100d557600080fd5b506100de6103ea565b6040516100eb919061099d565b60405180910390f35b34801561010057600080fd5b506101096103f7565b6040516101169190610942565b60405180910390f35b61012761041d565b005b34801561013557600080fd5b5061013e610558565b60405161014b9190610927565b60405180910390f35b34801561016057600080fd5b5061017b600480360381019061017691906107d4565b61057c565b6040516101889190610927565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610216576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156102c257600080828154811061023b5761023a610cbc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506001816102bb91906109d4565b9050610219565b50600067ffffffffffffffff8111156102de576102dd610ceb565b5b60405190808252806020026020018201604052801561030c5781602001602082028036833780820191505090505b5060009080519060200190610322929190610697565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161034990610912565b60006040518083038185875af1925050503d8060008114610386576040519150601f19603f3d011682016040523d82523d6000602084013e61038b565b606091505b50509050806103cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c69061097d565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000061045c600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105bb90919063ffffffff16565b101561049d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104949061095d565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461054f91906109d4565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c7836105f7565b90506000670de0b6b3a764000082866105e09190610b72565b6105ea9190610a2a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064057600080fd5b505afa158015610654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106789190610801565b5050509150506402540be4008161068f9190610a5b565b915050919050565b828054828255906000526020600020908101928215610710579160200282015b8281111561070f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b7565b5b50905061071d9190610721565b5090565b5b8082111561073a576000816000905550600101610722565b5090565b60008135905061074d81610d74565b92915050565b60008151905061076281610d8b565b92915050565b60008135905061077781610da2565b92915050565b60008151905061078c81610da2565b92915050565b6000815190506107a181610db9565b92915050565b6000602082840312156107bd576107bc610d1a565b5b60006107cb8482850161073e565b91505092915050565b6000602082840312156107ea576107e9610d1a565b5b60006107f884828501610768565b91505092915050565b600080600080600060a0868803121561081d5761081c610d1a565b5b600061082b88828901610792565b955050602061083c88828901610753565b945050604061084d8882890161077d565b935050606061085e8882890161077d565b925050608061086f88828901610792565b9150509295509295909350565b61088581610bcc565b82525050565b61089481610c28565b82525050565b60006108a76012836109c3565b91506108b282610d1f565b602082019050919050565b60006108ca6000836109b8565b91506108d582610d48565b600082019050919050565b60006108ed600b836109c3565b91506108f882610d4b565b602082019050919050565b61090c81610c08565b82525050565b600061091d826108bd565b9150819050919050565b600060208201905061093c600083018461087c565b92915050565b6000602082019050610957600083018461088b565b92915050565b600060208201905081810360008301526109768161089a565b9050919050565b60006020820190508181036000830152610996816108e0565b9050919050565b60006020820190506109b26000830184610903565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109df82610c08565b91506109ea83610c08565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a1f57610a1e610c5e565b5b828201905092915050565b6000610a3582610c08565b9150610a4083610c08565b925082610a5057610a4f610c8d565b5b828204905092915050565b6000610a6682610bde565b9150610a7183610bde565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ab057610aaf610c5e565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610aed57610aec610c5e565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b2a57610b29610c5e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b6757610b66610c5e565b5b828202905092915050565b6000610b7d82610c08565b9150610b8883610c08565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bc157610bc0610c5e565b5b828202905092915050565b6000610bd782610be8565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c3382610c3a565b9050919050565b6000610c4582610c4c565b9050919050565b6000610c5782610be8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b50565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b610d7d81610bcc565b8114610d8857600080fd5b50565b610d9481610bde565b8114610d9f57600080fd5b50565b610dab81610c08565b8114610db657600080fd5b50565b610dc281610c12565b8114610dcd57600080fd5b5056fea264697066735822122044ab2f08a20c137accc01d719f054d662c61c6dc38b8ab9dcf524b366c9522e264736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}