{
  "address": "0xBB09C53C2D2A4c12976b0b76db43b7d5Ecc296f1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x7379466fab932510e2cdf703ac0ac19d83d2feb161dc75a660697cb709d4674d",
  "receipt": {
    "to": null,
    "from": "0xFD937A53DB750337bf861A332A626CaC9C73A537",
    "contractAddress": "0xBB09C53C2D2A4c12976b0b76db43b7d5Ecc296f1",
    "transactionIndex": 6,
    "gasUsed": "856887",
    "logsBloom": "0x
    "blockHash": "0xddb6e127bbb068fd4fcfa8a512ac9594eca4bc06c705bb8da789db771609e7e5",
    "transactionHash": "0x7379466fab932510e2cdf703ac0ac19d83d2feb161dc75a660697cb709d4674d",
    "logs": [],
    "blockNumber": 3288010,
    "cumulativeGasUsed": "1186483",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "1ccd0dbafb247ccdc27b82d5b797b0cb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get Funds From Users\\n// Withdraw funds\\n// Set minimum funding value in USD\\n\\n//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18; // 1 * 10 **18\\n    // 307 - constant\\n    // 2451 - without constant\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough\\\"\\n        ); // 1e18 == 1 * 10 ** 18 == 1000000000000000000\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex = funderIndex + 1\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n\\n        // call (forward all gas or set gas, returns bool)\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // What happens if someone sends this contract ETH without calling the fund function?\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xa1f322ebe9cb6b7f14b11973ddeb840c80d172dc26570f8316f63b6f38b40c9f\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    // function getVersion() internal view returns (uint256) {\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //         0x694AA1769357215DE4FAC081bf1f309aDC325306\\n    //     );\\n    //     return priceFeed.version();\\n    // }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethAmount * ethPrice) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xeed34591a8b40006a913062d1466f986e46cec003eebb36aed161dc1515c2da7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f83380380610f83833981810160405281019061003291906100c5565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b6000815190506100bf81610129565b92915050565b6000602082840312156100db576100da610124565b5b60006100e9848285016100b0565b91505092915050565b60006100fd82610104565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610132816100f2565b811461013d57600080fd5b50565b60805160601c610e1e610165600039600081816102e601526105720152610e1e6000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e4565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107bf565b610525565b6040516100d891906109b5565b60405180910390f35b3480156100ed57600080fd5b506100f661053d565b60405161010391906109b5565b60405180910390f35b34801561011857600080fd5b5061012161054a565b60405161012e919061095a565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610570565b604051610163919061093f565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906107ec565b610594565b6040516101a0919061093f565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d390919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610975565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102db91906109ec565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610369576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041557600080828154811061038e5761038d610cd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505060018161040e91906109ec565b905061036c565b50600067ffffffffffffffff81111561043157610430610d03565b5b60405190808252806020026020018201604052801561045f5781602001602082028036833780820191505090505b50600090805190602001906104759291906106af565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049c9061092a565b60006040518083038185875af1925050503d80600081146104d9576040519150601f19603f3d011682016040523d82523d6000602084013e6104de565b606091505b5050905080610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990610995565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106105a457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105df8361060f565b90506000670de0b6b3a764000082866105f89190610b8a565b6106029190610a42565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065857600080fd5b505afa15801561066c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106909190610819565b5050509150506402540be400816106a79190610a73565b915050919050565b828054828255906000526020600020908101928215610728579160200282015b828111156107275782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106cf565b5b5090506107359190610739565b5090565b5b8082111561075257600081600090555060010161073a565b5090565b60008135905061076581610d8c565b92915050565b60008151905061077a81610da3565b92915050565b60008135905061078f81610dba565b92915050565b6000815190506107a481610dba565b92915050565b6000815190506107b981610dd1565b92915050565b6000602082840312156107d5576107d4610d32565b5b60006107e384828501610756565b91505092915050565b60006020828403121561080257610801610d32565b5b600061081084828501610780565b91505092915050565b600080600080600060a0868803121561083557610834610d32565b5b6000610843888289016107aa565b95505060206108548882890161076b565b945050604061086588828901610795565b935050606061087688828901610795565b9250506080610887888289016107aa565b9150509295509295909350565b61089d81610be4565b82525050565b6108ac81610c40565b82525050565b60006108bf6012836109db565b91506108ca82610d37565b602082019050919050565b60006108e26000836109d0565b91506108ed82610d60565b600082019050919050565b6000610905600b836109db565b915061091082610d63565b602082019050919050565b61092481610c20565b82525050565b6000610935826108d5565b9150819050919050565b60006020820190506109546000830184610894565b92915050565b600060208201905061096f60008301846108a3565b92915050565b6000602082019050818103600083015261098e816108b2565b9050919050565b600060208201905081810360008301526109ae816108f8565b9050919050565b60006020820190506109ca600083018461091b565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109f782610c20565b9150610a0283610c20565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a3757610a36610c76565b5b828201905092915050565b6000610a4d82610c20565b9150610a5883610c20565b925082610a6857610a67610ca5565b5b828204905092915050565b6000610a7e82610bf6565b9150610a8983610bf6565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ac857610ac7610c76565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b0557610b04610c76565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b4257610b41610c76565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b7f57610b7e610c76565b5b828202905092915050565b6000610b9582610c20565b9150610ba083610c20565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd957610bd8610c76565b5b828202905092915050565b6000610bef82610c00565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c4b82610c52565b9050919050565b6000610c5d82610c64565b9050919050565b6000610c6f82610c00565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b50565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b610d9581610be4565b8114610da057600080fd5b50565b610dac81610bf6565b8114610db757600080fd5b50565b610dc381610c20565b8114610dce57600080fd5b50565b610dda81610c2a565b8114610de557600080fd5b5056fea26469706673582212205bf5fa05feabbb7b85505b68d45c50aff2f787272eec9d57c56ae263072f7a6e64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e4565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107bf565b610525565b6040516100d891906109b5565b60405180910390f35b3480156100ed57600080fd5b506100f661053d565b60405161010391906109b5565b60405180910390f35b34801561011857600080fd5b5061012161054a565b60405161012e919061095a565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610570565b604051610163919061093f565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906107ec565b610594565b6040516101a0919061093f565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105d390919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610975565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102db91906109ec565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610369576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041557600080828154811061038e5761038d610cd4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505060018161040e91906109ec565b905061036c565b50600067ffffffffffffffff81111561043157610430610d03565b5b60405190808252806020026020018201604052801561045f5781602001602082028036833780820191505090505b50600090805190602001906104759291906106af565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049c9061092a565b60006040518083038185875af1925050503d80600081146104d9576040519150601f19603f3d011682016040523d82523d6000602084013e6104de565b606091505b5050905080610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990610995565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106105a457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105df8361060f565b90506000670de0b6b3a764000082866105f89190610b8a565b6106029190610a42565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065857600080fd5b505afa15801561066c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106909190610819565b5050509150506402540be400816106a79190610a73565b915050919050565b828054828255906000526020600020908101928215610728579160200282015b828111156107275782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106cf565b5b5090506107359190610739565b5090565b5b8082111561075257600081600090555060010161073a565b5090565b60008135905061076581610d8c565b92915050565b60008151905061077a81610da3565b92915050565b60008135905061078f81610dba565b92915050565b6000815190506107a481610dba565b92915050565b6000815190506107b981610dd1565b92915050565b6000602082840312156107d5576107d4610d32565b5b60006107e384828501610756565b91505092915050565b60006020828403121561080257610801610d32565b5b600061081084828501610780565b91505092915050565b600080600080600060a0868803121561083557610834610d32565b5b6000610843888289016107aa565b95505060206108548882890161076b565b945050604061086588828901610795565b935050606061087688828901610795565b9250506080610887888289016107aa565b9150509295509295909350565b61089d81610be4565b82525050565b6108ac81610c40565b82525050565b60006108bf6012836109db565b91506108ca82610d37565b602082019050919050565b60006108e26000836109d0565b91506108ed82610d60565b600082019050919050565b6000610905600b836109db565b915061091082610d63565b602082019050919050565b61092481610c20565b82525050565b6000610935826108d5565b9150819050919050565b60006020820190506109546000830184610894565b92915050565b600060208201905061096f60008301846108a3565b92915050565b6000602082019050818103600083015261098e816108b2565b9050919050565b600060208201905081810360008301526109ae816108f8565b9050919050565b60006020820190506109ca600083018461091b565b92915050565b600081905092915050565b600082825260208201905092915050565b60006109f782610c20565b9150610a0283610c20565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a3757610a36610c76565b5b828201905092915050565b6000610a4d82610c20565b9150610a5883610c20565b925082610a6857610a67610ca5565b5b828204905092915050565b6000610a7e82610bf6565b9150610a8983610bf6565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ac857610ac7610c76565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b0557610b04610c76565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b4257610b41610c76565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610b7f57610b7e610c76565b5b828202905092915050565b6000610b9582610c20565b9150610ba083610c20565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd957610bd8610c76565b5b828202905092915050565b6000610bef82610c00565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c4b82610c52565b9050919050565b6000610c5d82610c64565b9050919050565b6000610c6f82610c00565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b50565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b610d9581610be4565b8114610da057600080fd5b50565b610dac81610bf6565b8114610db757600080fd5b50565b610dc381610c20565b8114610dce57600080fd5b50565b610dda81610c2a565b8114610de557600080fd5b5056fea26469706673582212205bf5fa05feabbb7b85505b68d45c50aff2f787272eec9d57c56ae263072f7a6e64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}